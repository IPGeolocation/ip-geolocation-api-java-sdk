/*
 * IPGeolocation.io - IP intelligence products
 * Ipgeolocation provides a set of APIs to make ip based decisions.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.ipgeolocation.sdk.model;

import org.junit.jupiter.api.Test;

/**
 * Model tests for LocationMinimal
 */
public class LocationMinimalTest {
    private final LocationMinimal model = new LocationMinimal();

    /**
     * Model tests for LocationMinimal
     */
    @Test
    public void testLocationMinimal() {
        // TODO: test LocationMinimal
    }

    /**
     * Test the property 'continentCode'
     */
    @Test
    public void continentCodeTest() {
        // TODO: test continentCode
    }

    /**
     * Test the property 'continentName'
     */
    @Test
    public void continentNameTest() {
        // TODO: test continentName
    }

    /**
     * Test the property 'countryCode2'
     */
    @Test
    public void countryCode2Test() {
        // TODO: test countryCode2
    }

    /**
     * Test the property 'countryCode3'
     */
    @Test
    public void countryCode3Test() {
        // TODO: test countryCode3
    }

    /**
     * Test the property 'countryName'
     */
    @Test
    public void countryNameTest() {
        // TODO: test countryName
    }

    /**
     * Test the property 'countryNameOfficial'
     */
    @Test
    public void countryNameOfficialTest() {
        // TODO: test countryNameOfficial
    }

    /**
     * Test the property 'countryCapital'
     */
    @Test
    public void countryCapitalTest() {
        // TODO: test countryCapital
    }

    /**
     * Test the property 'stateProv'
     */
    @Test
    public void stateProvTest() {
        // TODO: test stateProv
    }

    /**
     * Test the property 'stateCode'
     */
    @Test
    public void stateCodeTest() {
        // TODO: test stateCode
    }

    /**
     * Test the property 'district'
     */
    @Test
    public void districtTest() {
        // TODO: test district
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'zipcode'
     */
    @Test
    public void zipcodeTest() {
        // TODO: test zipcode
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'isEu'
     */
    @Test
    public void isEuTest() {
        // TODO: test isEu
    }

    /**
     * Test the property 'countryFlag'
     */
    @Test
    public void countryFlagTest() {
        // TODO: test countryFlag
    }

    /**
     * Test the property 'geonameId'
     */
    @Test
    public void geonameIdTest() {
        // TODO: test geonameId
    }

    /**
     * Test the property 'countryEmoji'
     */
    @Test
    public void countryEmojiTest() {
        // TODO: test countryEmoji
    }

}
